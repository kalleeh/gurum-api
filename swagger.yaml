swagger: "2.0"
info:
  version: "1.0"
  title: "platform-api"
host: "api.gureu.me"
schemes:
- "https"
paths:
  /apps:
    get:
      produces:
      - "application/json"
      responses:
        '200':
          description: "200 response"
          schema:
            $ref: "#/definitions/Empty"
      security:
      - CognitoUserPool: []
      x-amazon-apigateway-integration:
        uri:
          !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ListAppsFunction.Arn}/invocations
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws_proxy"
    post:
      produces:
      - "application/json"
      responses:
        '200':
          description: "200 response"
          schema:
            $ref: "#/definitions/Empty"
      security:
      - CognitoUserPool: []
      x-amazon-apigateway-integration:
        uri:
          !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${CreateAppFunction.Arn}/invocations
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws_proxy"
  /apps/{name}:
    get:
      produces:
      - "application/json"
      parameters:
      - name: "name"
        in: "path"
        required: true
        type: "string"
      responses:
        '200':
          description: "200 response"
          schema:
            $ref: "#/definitions/Empty"
      security:
      - CognitoUserPool: []
      x-amazon-apigateway-integration:
        uri:
          !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${DescribeAppFunction.Arn}/invocations
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws_proxy"
    delete:
      produces:
      - "application/json"
      parameters:
      - name: "name"
        in: "path"
        required: true
        type: "string"
      responses:
        '200':
          description: "200 response"
          schema:
            $ref: "#/definitions/Empty"
      security:
      - CognitoUserPool: []
      x-amazon-apigateway-integration:
        uri:
          !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${DeleteAppFunction.Arn}/invocations
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws_proxy"
    patch:
      produces:
      - "application/json"
      parameters:
      - name: "name"
        in: "path"
        required: true
        type: "string"
      responses:
        '200':
          description: "200 response"
          schema:
            $ref: "#/definitions/Empty"
      security:
      - CognitoUserPool: []
      x-amazon-apigateway-integration:
        uri:
          !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${UpdateAppFunction.Arn}/invocations
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws_proxy"
  /events/{name}:
    get:
      produces:
      - "application/json"
      parameters:
      - name: "name"
        in: "path"
        required: true
        type: "string"
      responses:
        '200':
          description: "200 response"
          schema:
            $ref: "#/definitions/Empty"
      security:
      - CognitoUserPool: []
      x-amazon-apigateway-integration:
        uri:
          !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${DescribeEventsFunction.Arn}/invocations
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws_proxy"
  /pipelines:
    get:
      produces:
      - "application/json"
      responses:
        '200':
          description: "200 response"
          schema:
            $ref: "#/definitions/Empty"
      security:
      - CognitoUserPool: []
      x-amazon-apigateway-integration:
        uri:
          !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ListPipelinesFunction.Arn}/invocations
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws_proxy"
  /pipelines/{name}:
    get:
      produces:
      - "application/json"
      parameters:
      - name: "name"
        in: "path"
        required: true
        type: "string"
      responses:
        '200':
          description: "200 response"
          schema:
            $ref: "#/definitions/Empty"
      security:
      - CognitoUserPool: []
      x-amazon-apigateway-integration:
        uri:
          !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${DescribePipelineFunction.Arn}/invocations
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws_proxy"
    post:
      produces:
      - "application/json"
      parameters:
      - name: "name"
        in: "path"
        required: true
        type: "string"
      responses:
        '200':
          description: "200 response"
          schema:
            $ref: "#/definitions/Empty"
      security:
      - CognitoUserPool: []
      x-amazon-apigateway-integration:
        uri:
          !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${CreatePipelineFunction.Arn}/invocations
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws_proxy"
    delete:
      produces:
      - "application/json"
      parameters:
      - name: "name"
        in: "path"
        required: true
        type: "string"
      responses:
        '200':
          description: "200 response"
          schema:
            $ref: "#/definitions/Empty"
      security:
      - CognitoUserPool: []
      x-amazon-apigateway-integration:
        uri:
          !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${DeletePipelineFunction.Arn}/invocations
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws_proxy"
    patch:
      produces:
      - "application/json"
      parameters:
      - name: "name"
        in: "path"
        required: true
        type: "string"
      responses:
        '200':
          description: "200 response"
          schema:
            $ref: "#/definitions/Empty"
      security:
      - CognitoUserPool: []
      x-amazon-apigateway-integration:
        uri:
          !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${UpdatePipelineFunction.Arn}/invocations
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws_proxy"