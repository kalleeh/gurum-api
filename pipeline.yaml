AWSTemplateFormatVersion: 2010-09-09
Description: >

    This template generates a generic 3-environment CI/CD Pipeline for Serverless Apps that use SAM (Serverless Application Model).

    Charges may apply for AWS Services utilized - Below are a summary for your convenience:

      AWS CodeCommit: Manages and Stores your service source code (Git repository)
      Amazon S3: Manages CodeBuild Artifacts as well as Cache for subsequent runs when defined in the build spec
      AWS CodeBuild: Manages and Runs builds specified under buildspec.yaml
      AWS CodePipeline: Manages and Runs the Continuous Integration and Continuous Deployment pipeline
      AWS CloudFormation: Manages SAM templates and creates the Infrastructure necessary for each environment
      AWS IAM: Manages Identity and Access across Services outlined above


Parameters:

  WebhookURL:
    Type: String
    Default: ""
    Description: Webhook URL for Chime notifications

Conditions:

  ChimeWebhookSet: !Not [!Equals [!Ref WebhookURL, ""]]

Resources:

#   ██████  ▒█████   █    ██  ██▀███   ▄████▄  ▓█████ 
# ▒██    ▒ ▒██▒  ██▒ ██  ▓██▒▓██ ▒ ██▒▒██▀ ▀█  ▓█   ▀ 
# ░ ▓██▄   ▒██░  ██▒▓██  ▒██░▓██ ░▄█ ▒▒▓█    ▄ ▒███   
#   ▒   ██▒▒██   ██░▓▓█  ░██░▒██▀▀█▄  ▒▓▓▄ ▄██▒▒▓█  ▄ 
# ▒██████▒▒░ ████▓▒░▒▒█████▓ ░██▓ ▒██▒▒ ▓███▀ ░░▒████▒
# ▒ ▒▓▒ ▒ ░░ ▒░▒░▒░ ░▒▓▒ ▒ ▒ ░ ▒▓ ░▒▓░░ ░▒ ▒  ░░░ ▒░ ░
# ░ ░▒  ░ ░  ░ ▒ ▒░ ░░▒░ ░ ░   ░▒ ░ ▒░  ░  ▒    ░ ░  ░
# ░  ░  ░  ░ ░ ░ ▒   ░░░ ░ ░   ░░   ░ ░           ░   
#      ░      ░ ░     ░        ░     ░ ░         ░  ░
#                                    ░               

    CodeRepository:
        Type: AWS::CodeCommit::Repository
        Properties:
            RepositoryName: gureume-api
            RepositoryDescription: gureume-api service repository
            Triggers:
            - Name: MasterTrigger
              CustomData: Project ID 12345
              DestinationArn:
                Ref: NotificationTopic
              Branches:
              - master
              Events:
              - all

    # CodeBuild project and resources (S3 Bucket for build artifacts, Role, Project)
    BuildArtifactsBucket:
        Type: AWS::S3::Bucket
        Properties:
          BucketEncryption:
            ServerSideEncryptionConfiguration:
              - ServerSideEncryptionByDefault:
                  SSEAlgorithm: AES256
          Tags: 
            - 
              Key: 'Stack'
              Value: !Ref AWS::StackName
            -
              Key: 'Project'
              Value: gureume-api
        DeletionPolicy: Retain

#  ▄▄▄▄    █    ██  ██▓ ██▓    ▓█████▄ 
# ▓█████▄  ██  ▓██▒▓██▒▓██▒    ▒██▀ ██▌
# ▒██▒ ▄██▓██  ▒██░▒██▒▒██░    ░██   █▌
# ▒██░█▀  ▓▓█  ░██░░██░▒██░    ░▓█▄   ▌
# ░▓█  ▀█▓▒▒█████▓ ░██░░██████▒░▒████▓ 
# ░▒▓███▀▒░▒▓▒ ▒ ▒ ░▓  ░ ▒░▓  ░ ▒▒▓  ▒ 
# ▒░▒   ░ ░░▒░ ░ ░  ▒ ░░ ░ ▒  ░ ░ ▒  ▒ 
#  ░    ░  ░░░ ░ ░  ▒ ░  ░ ░    ░ ░  ░ 
#  ░         ░      ░      ░  ░   ░    
#       ░                       ░      

    CodeBuildProject:
        Type: AWS::CodeBuild::Project
        Properties:
            Name: gureume-api
            Description: Build project for the gureume-api
            Artifacts:
              Type: CODEPIPELINE
            Environment: 
                Type: LINUX_CONTAINER
                ComputeType: BUILD_GENERAL1_SMALL
                Image: aws/codebuild/python:3.6.5 # More info on Images: https://docs.aws.amazon.com/codebuild/latest/userguide/build-env-ref-available.html
                EnvironmentVariables:
                  - 
                    Name: BUILD_OUTPUT_BUCKET
                    Value: !Ref BuildArtifactsBucket
            Cache:
              Type: S3
              Location: !Sub ${BuildArtifactsBucket}/codebuild-cache
            ServiceRole: !GetAtt CodeBuildServiceRole.Arn
            Source: 
                Type: CODEPIPELINE
            Tags: 
              - 
                Key: 'Stack'
                Value: !Ref AWS::StackName
              -
                Key: 'Project'
                Value: gureume-api

#  ██▓███   ██▓ ██▓███  ▓█████  ██▓     ██▓ ███▄    █ ▓█████ 
# ▓██░  ██▒▓██▒▓██░  ██▒▓█   ▀ ▓██▒    ▓██▒ ██ ▀█   █ ▓█   ▀ 
# ▓██░ ██▓▒▒██▒▓██░ ██▓▒▒███   ▒██░    ▒██▒▓██  ▀█ ██▒▒███   
# ▒██▄█▓▒ ▒░██░▒██▄█▓▒ ▒▒▓█  ▄ ▒██░    ░██░▓██▒  ▐▌██▒▒▓█  ▄ 
# ▒██▒ ░  ░░██░▒██▒ ░  ░░▒████▒░██████▒░██░▒██░   ▓██░░▒████▒
# ▒▓▒░ ░  ░░▓  ▒▓▒░ ░  ░░░ ▒░ ░░ ▒░▓  ░░▓  ░ ▒░   ▒ ▒ ░░ ▒░ ░
# ░▒ ░      ▒ ░░▒ ░      ░ ░  ░░ ░ ▒  ░ ▒ ░░ ░░   ░ ▒░ ░ ░  ░
# ░░        ▒ ░░░          ░     ░ ░    ▒ ░   ░   ░ ░    ░   
#           ░              ░  ░    ░  ░ ░           ░    ░  ░

    Pipeline:
        Type: AWS::CodePipeline::Pipeline
        Properties:
            ArtifactStore: 
                Location: !Ref BuildArtifactsBucket
                Type: S3
            Name: gureume-api
            RoleArn: !GetAtt CodePipelineExecutionRole.Arn
            Stages:
                - Name: Source
                  Actions:
                    - Name: SourceCodeRepo
                      ActionTypeId:
                      # More info on Possible Values: https://docs.aws.amazon.com/codepipeline/latest/userguide/reference-pipeline-structure.html#action-requirements
                        Category: Source
                        Owner: AWS
                        Provider: CodeCommit
                        Version: '1'
                      Configuration:
                        RepositoryName: !GetAtt CodeRepository.Name
                        BranchName: master
                      OutputArtifacts:
                        - Name: SourceCodeAsZip
                      RunOrder: 1
                - Name: Build
                  Actions:
                    - Name: CodeBuild
                      ActionTypeId:
                        Category: Build
                        Owner: AWS
                        Provider: CodeBuild
                        Version: '1'
                      Configuration:
                        ProjectName: !Ref CodeBuildProject
                      InputArtifacts:
                        - Name: SourceCodeAsZip
                      OutputArtifacts:
                        - Name: BuildArtifactAsZip
                - Name: Beta
                  Actions:
                    - Name: CreateChangeSet
                      ActionTypeId:
                        Category: Deploy
                        Owner: AWS
                        Provider: CloudFormation
                        Version: '1'
                      Configuration:
                      # More info on Possible Values for Cloudformation: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/continuous-delivery-codepipeline-action-reference.html#w2ab2c13c13b9
                        ActionMode: CHANGE_SET_REPLACE
                        RoleArn: !GetAtt CloudFormationExecutionRole.Arn
                        StackName: gureume-api-Beta
                        ChangeSetName: gureume-api-ChangeSet-Beta
                        TemplatePath: BuildArtifactAsZip::template-deploy.yaml
                        Capabilities: CAPABILITY_IAM
                      InputArtifacts:
                        - Name: BuildArtifactAsZip
                      RunOrder: 1
                    - Name: ExecuteChangeSet
                      ActionTypeId:
                        Category: Deploy
                        Owner: AWS
                        Provider: CloudFormation
                        Version: '1'
                      Configuration:
                        ActionMode: CHANGE_SET_EXECUTE
                        RoleArn: !GetAtt CloudFormationExecutionRole.Arn
                        StackName: gureume-api-Beta
                        ChangeSetName: gureume-api-ChangeSet-Beta
                      OutputArtifacts:
                        - Name: gureume-apiBetaChangeSet
                      RunOrder: 2
                - Name: Prod
                  Actions:
                    - Name: DeploymentApproval
                      ActionTypeId:
                        Category: Approval
                        Owner: AWS
                        Provider: Manual
                        Version: '1'
                      RunOrder: 1
                    - Name: CreateChangeSet
                      ActionTypeId:
                        Category: Deploy
                        Owner: AWS
                        Provider: CloudFormation
                        Version: '1'
                      Configuration:
                        ActionMode: CHANGE_SET_REPLACE
                        RoleArn: !GetAtt CloudFormationExecutionRole.Arn
                        StackName: gureume-api-Prod
                        ChangeSetName: gureume-api-ChangeSet-Prod
                        TemplatePath: BuildArtifactAsZip::template-deploy.yaml
                        Capabilities: CAPABILITY_IAM
                      InputArtifacts:
                        - Name: BuildArtifactAsZip
                      RunOrder: 2
                    - Name: ExecuteChangeSet
                      ActionTypeId:
                        Category: Deploy
                        Owner: AWS
                        Provider: CloudFormation
                        Version: '1'
                      Configuration:
                        ActionMode: CHANGE_SET_EXECUTE
                        RoleArn: !GetAtt CloudFormationExecutionRole.Arn
                        StackName: gureume-api-Prod
                        ChangeSetName: gureume-api-ChangeSet-Prod
                      OutputArtifacts:
                        - Name: gureume-apiProdChangeSet
                      RunOrder: 3

#
#  ██▓ ▄▄▄       ███▄ ▄███▓
# ▓██▒▒████▄    ▓██▒▀█▀ ██▒
# ▒██▒▒██  ▀█▄  ▓██    ▓██░
# ░██░░██▄▄▄▄██ ▒██    ▒██ 
# ░██░ ▓█   ▓██▒▒██▒   ░██▒
# ░▓   ▒▒   ▓▒█░░ ▒░   ░  ░
#  ▒ ░  ▒   ▒▒ ░░  ░      ░
#  ▒ ░  ░   ▒   ░      ░   
#  ░        ░  ░       ░   
# 

    CodeBuildServiceRole:
        Type: AWS::IAM::Role
        Properties:
            AssumeRolePolicyDocument:
                Version: '2012-10-17'
                Statement:
                  - Action: 
                      - 'sts:AssumeRole'
                    Effect: Allow
                    Principal:
                      Service:
                        - codebuild.amazonaws.com
            Path: /
            Policies:
                - PolicyName: CodeBuildLogs
                  PolicyDocument:
                    Version: '2012-10-17'
                    Statement:
                      - 
                        Effect: Allow
                        Action:
                          - 'logs:CreateLogGroup'
                          - 'logs:CreateLogStream'
                          - 'logs:PutLogEvents'
                        Resource:
                          - !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/gureume-api'
                          - !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/gureume-api:*'
                - PolicyName: CodeBuildArtifactsBucket
                  PolicyDocument:
                    Version: '2012-10-17'
                    Statement:
                      - 
                        Effect: Allow
                        Action: 
                          - 's3:GetObject'
                          - 's3:GetObjectVersion'
                          - 's3:PutObject'
                        Resource:
                          - !Sub 'arn:aws:s3:::${BuildArtifactsBucket}/*'
                - PolicyName: CodeBuildParameterStore
                  PolicyDocument:
                    Version: '2012-10-17'
                    Statement:
                      -
                        Effect: Allow
                        Action: 'ssm:GetParameters'
                        Resource: '*'


    CloudFormationExecutionRole:
      Type: AWS::IAM::Role
      Properties:
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            Action: 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service: cloudformation.amazonaws.com
        Path: /
        ManagedPolicyArns:
          - 'arn:aws:iam::aws:policy/AdministratorAccess'


    CodePipelineExecutionRole:
        Type: AWS::IAM::Role
        Properties:
            AssumeRolePolicyDocument:
                Version: '2012-10-17'
                Statement:
                  - 
                    Action: 
                        - 'sts:AssumeRole'
                    Effect: Allow
                    Principal:
                      Service: 
                        - codepipeline.amazonaws.com
            Path: /
            Policies:
                - PolicyName: CodePipelineAccess
                  PolicyDocument:
                    Version: '2012-10-17'
                    Statement:
                        - 
                            Effect: Allow
                            Action:
                                - 'iam:PassRole'
                                - 'lambda:InvokeFunction'
                                - 'lambda:ListFunctions'
                                - 'lambda:InvokeAsyc'
                            Resource: '*'
                - PolicyName: CodePipelineCodeAndArtifactsS3Bucket
                  PolicyDocument:
                    Version: '2012-10-17'
                    Statement:
                      - 
                        Effect: Allow
                        Action: 's3:*'
                        Resource: !Sub 'arn:aws:s3:::${BuildArtifactsBucket}/*'
                      - 
                        Effect: Allow
                        Action: 'codecommit:*'
                        Resource: !Sub 'arn:aws:codecommit:${AWS::Region}:${AWS::AccountId}:${CodeRepository.Name}'

                - PolicyName: CodePipelineCodeBuildAndCloudformationAccess
                  PolicyDocument:
                    Version: '2012-10-17'
                    Statement:
                      - 
                        Effect: Allow
                        Action: 
                          - 'codebuild:StartBuild'
                          - 'codebuild:BatchGetBuilds'
                        Resource: 
                          - !Sub 'arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:project/${CodeBuildProject}'
                      - 
                        Effect: Allow
                        Action: 
                          - 'cloudformation:CreateStack'
                          - 'cloudformation:DescribeStacks'
                          - 'cloudformation:DeleteStack'
                          - 'cloudformation:UpdateStack'
                          - 'cloudformation:CreateChangeSet'
                          - 'cloudformation:ExecuteChangeSet'
                          - 'cloudformation:DeleteChangeSet'
                          - 'cloudformation:DescribeChangeSet'
                          - 'cloudformation:SetStackPolicy'
                          - 'cloudformation:SetStackPolicy'
                          - 'cloudformation:ValidateTemplate'
                        Resource: 
                          - !Sub 'arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/gureume-api*/*'
                          - !Sub 'arn:aws:cloudformation:${AWS::Region}:aws:transform/Serverless-2016-10-31'


#
#  ███▄    █  ▒█████  ▄▄▄█████▓ ██▓  █████▒██▓ ▄████▄   ▄▄▄     ▄▄▄█████▓ ██▓ ▒█████   ███▄    █ 
#  ██ ▀█   █ ▒██▒  ██▒▓  ██▒ ▓▒▓██▒▓██   ▒▓██▒▒██▀ ▀█  ▒████▄   ▓  ██▒ ▓▒▓██▒▒██▒  ██▒ ██ ▀█   █ 
# ▓██  ▀█ ██▒▒██░  ██▒▒ ▓██░ ▒░▒██▒▒████ ░▒██▒▒▓█    ▄ ▒██  ▀█▄ ▒ ▓██░ ▒░▒██▒▒██░  ██▒▓██  ▀█ ██▒
# ▓██▒  ▐▌██▒▒██   ██░░ ▓██▓ ░ ░██░░▓█▒  ░░██░▒▓▓▄ ▄██▒░██▄▄▄▄██░ ▓██▓ ░ ░██░▒██   ██░▓██▒  ▐▌██▒
# ▒██░   ▓██░░ ████▓▒░  ▒██▒ ░ ░██░░▒█░   ░██░▒ ▓███▀ ░ ▓█   ▓██▒ ▒██▒ ░ ░██░░ ████▓▒░▒██░   ▓██░
# ░ ▒░   ▒ ▒ ░ ▒░▒░▒░   ▒ ░░   ░▓   ▒ ░   ░▓  ░ ░▒ ▒  ░ ▒▒   ▓▒█░ ▒ ░░   ░▓  ░ ▒░▒░▒░ ░ ▒░   ▒ ▒ 
# ░ ░░   ░ ▒░  ░ ▒ ▒░     ░     ▒ ░ ░      ▒ ░  ░  ▒     ▒   ▒▒ ░   ░     ▒ ░  ░ ▒ ▒░ ░ ░░   ░ ▒░
#    ░   ░ ░ ░ ░ ░ ▒    ░       ▒ ░ ░ ░    ▒ ░░          ░   ▒    ░       ▒ ░░ ░ ░ ▒     ░   ░ ░ 
#          ░     ░ ░            ░          ░  ░ ░            ░  ░         ░      ░ ░           ░ 
#                                             ░                                                  

    NotificationTopic:
      Type: AWS::SNS::Topic
      Properties: 
        TopicName: 'NotificationTopic'
        Subscription: !If
          - ChimeWebhookSet
          - -
              Endpoint:
                !GetAtt ChimeNotification.Arn
              Protocol: 'lambda'
          - !Ref "AWS::NoValue"

    ChimeNotification:
      Type: AWS::Lambda::Function
      Condition: ChimeWebhookSet
      Properties:
        Runtime: python3.6
        Handler: index.lambda_handler
        MemorySize: 128
        Role: !GetAtt LambdaExecutionRole.Arn
        Timeout: 30
        Environment:
          Variables:
            WEBHOOK_URL: !Ref WebhookURL
        Code:
          ZipFile: !Sub |
            from botocore.vendored import requests
            import os
            import json

            WEBHOOK_URL = os.getenv('WEBHOOK_URL', '')

            def post_message(message):
              payload = {}
              payload['Content'] = message
              
              try:
                resp = requests.post(WEBHOOK_URL, json=payload)
                resp.raise_for_status()
              except requests.exceptions.HTTPError as e:
                print('[{0}] Server Error'.format(resp.status_code))
                print('Message: {0}'.format(resp.text))
              except Exception as e:
                return (False, 'Unexpected error: ' + str(e))

            def lambda_handler(event, context):
              message = event['Records'][0]['Sns']['Message']

              try:
                resp = post_message(message)
              except Exception as e:
                return (False, 'Unexpected error: ' + str(e))
              else:
                return (True, 'Message successfully sent.')


    LambdaExecutionRole:
      Type: AWS::IAM::Role
      Condition: ChimeWebhookSet
      Properties:
        Path: /
        AssumeRolePolicyDocument:
          Version: 2012-10-17
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action:
                - sts:AssumeRole
        Policies:
          - PolicyName: root
            PolicyDocument:
              Version: 2012-10-17
              Statement:
                - Effect: Allow
                  Action:
                    - logs:CreateLogGroup
                    - logs:CreateLogStream
                    - logs:PutLogEvents
                  Resource: '*'

Outputs:


    CodeCommitRepositoryHttpUrl:
      Description: AWS CodeCommit Git repository
      Value: !GetAtt CodeRepository.CloneUrlHttp

    CodeCommitRepositorySshUrl:
      Description: AWS CodeCommit Git repository
      Value: !GetAtt CodeRepository.CloneUrlSsh
  
    BuildArtifactS3Bucket:
      Description: Amazon S3 Bucket for Pipeline and Build artifacts
      Value: !Ref BuildArtifactsBucket

    CodeBuildProject:
      Description: CodeBuild Project name
      Value: !Ref CodeBuildProject

    CodePipeline:
      Description: AWS CodePipeline pipeline name
      Value: !Ref Pipeline

    CodeBuildIAMRole:
      Description: CodeBuild IAM Role
      Value: !GetAtt CodeBuildServiceRole.Arn

    CloudformationIAMRole:
      Description: Cloudformation IAM Role
      Value: !GetAtt CloudFormationExecutionRole.Arn

    CodePipelineIAMRole:
      Description: CodePipeline IAM Role
      Value: !GetAtt CodePipelineExecutionRole.Arn
