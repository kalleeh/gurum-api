AWSTemplateFormatVersion: '2010-09-09'
Description: 'This SAM template creates the management API for the container platform.
  Last Modified: May 7th 2018 Author: Karl Wallbom <wallbomk@amazon.com

  '
Globals:
  Api:
    EndpointConfiguration: REGIONAL
  Function:
    Environment:
      Variables:
        COGNITO_USER_POOL: eu-west-1_MkM8NwiuN
        COGNITO_USER_POOL_ARN: arn:aws:cognito-idp:eu-west-1:789073296014:userpool/eu-west-1_MkM8NwiuN
        PLATFORM_DEPLOYMENT_ROLE: arn:aws:iam::789073296014:role/gureume-AppDeploymentRole-eu-west-1
        PLATFORM_ECS_CLUSTER: gureume
        PLATFORM_NAME: gureume
        PLATFORM_PREFIX: gureume-
        PLATFORM_REGION: eu-west-1
    Handler: index.handler
    Runtime: python3.6
    Timeout: 180
Parameters:
  ApiSwaggerBucket:
    Default: storage-kalleh/gureume
    Description: The S3 bucket / prefix where you have your swagger.yaml definition.
    Type: String
Resources:
  ApiGatewayApi:
    Properties:
      DefinitionBody:
        definitions:
          Empty:
            title: Empty Schema
            type: object
        host: api.gureu.me
        info:
          title: platform-api
          version: '1.0'
        paths:
          /apps:
            get:
              produces:
              - application/json
              responses:
                '200':
                  description: 200 response
                  schema:
                    $ref: '#/definitions/Empty'
              security:
              - CognitoUserPool: []
              x-amazon-apigateway-integration:
                contentHandling: CONVERT_TO_TEXT
                httpMethod: POST
                passthroughBehavior: when_no_match
                responses:
                  default:
                    statusCode: '200'
                type: aws_proxy
                uri:
                  Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ListAppsFunction.Arn}/invocations
            post:
              produces:
              - application/json
              responses:
                '200':
                  description: 200 response
                  schema:
                    $ref: '#/definitions/Empty'
              security:
              - CognitoUserPool: []
              x-amazon-apigateway-integration:
                contentHandling: CONVERT_TO_TEXT
                httpMethod: POST
                passthroughBehavior: when_no_match
                responses:
                  default:
                    statusCode: '200'
                type: aws_proxy
                uri:
                  Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${CreateAppFunction.Arn}/invocations
          /apps/{name}:
            delete:
              parameters:
              - in: path
                name: name
                required: true
                type: string
              produces:
              - application/json
              responses:
                '200':
                  description: 200 response
                  schema:
                    $ref: '#/definitions/Empty'
              security:
              - CognitoUserPool: []
              x-amazon-apigateway-integration:
                contentHandling: CONVERT_TO_TEXT
                httpMethod: POST
                passthroughBehavior: when_no_match
                responses:
                  default:
                    statusCode: '200'
                type: aws_proxy
                uri:
                  Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${DeleteAppFunction.Arn}/invocations
            get:
              parameters:
              - in: path
                name: name
                required: true
                type: string
              produces:
              - application/json
              responses:
                '200':
                  description: 200 response
                  schema:
                    $ref: '#/definitions/Empty'
              security:
              - CognitoUserPool: []
              x-amazon-apigateway-integration:
                contentHandling: CONVERT_TO_TEXT
                httpMethod: POST
                passthroughBehavior: when_no_match
                responses:
                  default:
                    statusCode: '200'
                type: aws_proxy
                uri:
                  Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${DescribeAppFunction.Arn}/invocations
            patch:
              parameters:
              - in: path
                name: name
                required: true
                type: string
              produces:
              - application/json
              responses:
                '200':
                  description: 200 response
                  schema:
                    $ref: '#/definitions/Empty'
              security:
              - CognitoUserPool: []
              x-amazon-apigateway-integration:
                contentHandling: CONVERT_TO_TEXT
                httpMethod: POST
                passthroughBehavior: when_no_match
                responses:
                  default:
                    statusCode: '200'
                type: aws_proxy
                uri:
                  Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${UpdateAppFunction.Arn}/invocations
          /events/{name}:
            get:
              parameters:
              - in: path
                name: name
                required: true
                type: string
              produces:
              - application/json
              responses:
                '200':
                  description: 200 response
                  schema:
                    $ref: '#/definitions/Empty'
              security:
              - CognitoUserPool: []
              x-amazon-apigateway-integration:
                contentHandling: CONVERT_TO_TEXT
                httpMethod: POST
                passthroughBehavior: when_no_match
                responses:
                  default:
                    statusCode: '200'
                type: aws_proxy
                uri:
                  Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${DescribeEventsFunction.Arn}/invocations
          /pipelines:
            get:
              produces:
              - application/json
              responses:
                '200':
                  description: 200 response
                  schema:
                    $ref: '#/definitions/Empty'
              security:
              - CognitoUserPool: []
              x-amazon-apigateway-integration:
                contentHandling: CONVERT_TO_TEXT
                httpMethod: POST
                passthroughBehavior: when_no_match
                responses:
                  default:
                    statusCode: '200'
                type: aws_proxy
                uri:
                  Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ListPipelinesFunction.Arn}/invocations
          /pipelines/{name}:
            delete:
              parameters:
              - in: path
                name: name
                required: true
                type: string
              produces:
              - application/json
              responses:
                '200':
                  description: 200 response
                  schema:
                    $ref: '#/definitions/Empty'
              security:
              - CognitoUserPool: []
              x-amazon-apigateway-integration:
                contentHandling: CONVERT_TO_TEXT
                httpMethod: POST
                passthroughBehavior: when_no_match
                responses:
                  default:
                    statusCode: '200'
                type: aws_proxy
                uri:
                  Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${DeletePipelineFunction.Arn}/invocations
            get:
              parameters:
              - in: path
                name: name
                required: true
                type: string
              produces:
              - application/json
              responses:
                '200':
                  description: 200 response
                  schema:
                    $ref: '#/definitions/Empty'
              security:
              - CognitoUserPool: []
              x-amazon-apigateway-integration:
                contentHandling: CONVERT_TO_TEXT
                httpMethod: POST
                passthroughBehavior: when_no_match
                responses:
                  default:
                    statusCode: '200'
                type: aws_proxy
                uri:
                  Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${DescribePipelineFunction.Arn}/invocations
            patch:
              parameters:
              - in: path
                name: name
                required: true
                type: string
              produces:
              - application/json
              responses:
                '200':
                  description: 200 response
                  schema:
                    $ref: '#/definitions/Empty'
              security:
              - CognitoUserPool: []
              x-amazon-apigateway-integration:
                contentHandling: CONVERT_TO_TEXT
                httpMethod: POST
                passthroughBehavior: when_no_match
                responses:
                  default:
                    statusCode: '200'
                type: aws_proxy
                uri:
                  Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${UpdatePipelineFunction.Arn}/invocations
            post:
              parameters:
              - in: path
                name: name
                required: true
                type: string
              produces:
              - application/json
              responses:
                '200':
                  description: 200 response
                  schema:
                    $ref: '#/definitions/Empty'
              security:
              - CognitoUserPool: []
              x-amazon-apigateway-integration:
                contentHandling: CONVERT_TO_TEXT
                httpMethod: POST
                passthroughBehavior: when_no_match
                responses:
                  default:
                    statusCode: '200'
                type: aws_proxy
                uri:
                  Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${CreatePipelineFunction.Arn}/invocations
        schemes:
        - https
        securityDefinitions:
          CognitoUserPool:
            in: header
            name: Authorization
            type: apiKey
            x-amazon-apigateway-authorizer:
              providerARNs:
              - arn:aws:cognito-idp:eu-west-1:789073296014:userpool/eu-west-1_MkM8NwiuN
              type: cognito_user_pools
            x-amazon-apigateway-authtype: cognito_user_pools
        swagger: '2.0'
        x-amazon-apigateway-binary-media-types:
        - application/octet-stream
        - application/x-tar
        - application/zip
        - audio/basic
        - audio/ogg
        - audio/mp4
        - audio/mpeg
        - audio/wav
        - audio/webm
        - image/png
        - image/jpg
        - image/jpeg
        - image/gif
        - video/ogg
        - video/mpeg
        - video/webm
      StageName: dev
      Variables:
        CreateAppFunctionArn:
          Fn::GetAtt:
          - CreateAppFunction
          - Arn
        CreatePipelineFunctionArn:
          Fn::GetAtt:
          - CreatePipelineFunction
          - Arn
        DeleteAppFunctionArn:
          Fn::GetAtt:
          - DeleteAppFunction
          - Arn
        DeletePipelineFunctionArn:
          Fn::GetAtt:
          - DeletePipelineFunction
          - Arn
        DescribeAppFunctionArn:
          Fn::GetAtt:
          - DescribeAppFunction
          - Arn
        DescribeEventsFunctionArn:
          Fn::GetAtt:
          - DescribeEventsFunction
          - Arn
        DescribePipelineFunctionArn:
          Fn::GetAtt:
          - DescribePipelineFunction
          - Arn
        ListAppsFunctionArn:
          Fn::GetAtt:
          - ListAppsFunction
          - Arn
        ListPipelinesFunctionArn:
          Fn::GetAtt:
          - ListPipelinesFunction
          - Arn
        UpdateAppFunctionArn:
          Fn::GetAtt:
          - UpdateAppFunction
          - Arn
        UpdatePipelineFunctionArn:
          Fn::GetAtt:
          - UpdatePipelineFunction
          - Arn
    Type: AWS::Serverless::Api
  CreateAppFunction:
    Properties:
      CodeUri: s3://storage-kalleh/gureume/538bf00cbf7104f44e5f2c25068e42e9
      Handler: apps.post
    Type: AWS::Serverless::Function
  CreatePipelineFunction:
    Properties:
      CodeUri: s3://storage-kalleh/gureume/538bf00cbf7104f44e5f2c25068e42e9
      Handler: pipelines.post
    Type: AWS::Serverless::Function
  DeleteAppFunction:
    Properties:
      CodeUri: s3://storage-kalleh/gureume/538bf00cbf7104f44e5f2c25068e42e9
      Handler: apps_name.delete
    Type: AWS::Serverless::Function
  DeletePipelineFunction:
    Properties:
      CodeUri: s3://storage-kalleh/gureume/538bf00cbf7104f44e5f2c25068e42e9
      Handler: pipelines_name.delete
    Type: AWS::Serverless::Function
  DescribeAppFunction:
    Properties:
      CodeUri: s3://storage-kalleh/gureume/538bf00cbf7104f44e5f2c25068e42e9
      Handler: apps_name.get
    Type: AWS::Serverless::Function
  DescribeEventsFunction:
    Properties:
      CodeUri: s3://storage-kalleh/gureume/538bf00cbf7104f44e5f2c25068e42e9
      Handler: events_name.get
    Type: AWS::Serverless::Function
  DescribePipelineFunction:
    Properties:
      CodeUri: s3://storage-kalleh/gureume/538bf00cbf7104f44e5f2c25068e42e9
      Handler: pipelines_name.get
    Type: AWS::Serverless::Function
  ListAppsFunction:
    Properties:
      CodeUri: s3://storage-kalleh/gureume/538bf00cbf7104f44e5f2c25068e42e9
      Handler: apps.get
      Policies:
      - CloudFormationDescribeStacksPolicy: {}
    Type: AWS::Serverless::Function
  ListPipelinesFunction:
    Properties:
      CodeUri: s3://storage-kalleh/gureume/538bf00cbf7104f44e5f2c25068e42e9
      Handler: apps.get
    Type: AWS::Serverless::Function
  UpdateAppFunction:
    Properties:
      CodeUri: s3://storage-kalleh/gureume/538bf00cbf7104f44e5f2c25068e42e9
      Handler: apps_name.patch
    Type: AWS::Serverless::Function
  UpdatePipelineFunction:
    Properties:
      CodeUri: s3://storage-kalleh/gureume/538bf00cbf7104f44e5f2c25068e42e9
      Handler: pipelines_name.patch
    Type: AWS::Serverless::Function
Transform: AWS::Serverless-2016-10-31
